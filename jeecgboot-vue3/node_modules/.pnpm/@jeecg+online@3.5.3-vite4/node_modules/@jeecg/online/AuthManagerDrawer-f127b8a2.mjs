import { defineComponent as A, ref as u, computed as D, resolveComponent as a, openBlock as h, createBlock as y, withCtx as r, createVNode as o, createElementBlock as _, Fragment as B, createCommentVNode as F } from "vue";
import { BasicDrawer as I, useDrawerInner as b } from "/@/components/Drawer";
import w from "./AuthFieldConfig-b1217a0c.mjs";
import v from "./AuthButtonConfig-2f71787c.mjs";
import k from "./AuthDataConfig-32cf23d2.mjs";
import { _ as K } from "./index-6a09a912.mjs";
import "/@/components/Table";
import "./auth.api-d3a6c4b3.mjs";
import "/@/utils/http/axios";
import "./auth.data-8be5c9e3.mjs";
import "lodash-es";
import "/@/components/Modal";
import "/@/components/Form";
import "/@/components/jeecg/OnLine/JPopupOnlReport.vue";
import "/@/hooks/web/useMessage";
import "vue-router";
const R = A({
  name: "AuthManagerDrawer",
  components: {
    BasicDrawer: I,
    AuthFieldConfig: w,
    AuthButtonConfig: v,
    AuthDataConfig: k
  },
  props: {
    // 1单表 2主表 3附表
    tableType: {
      type: Number,
      default: 1
    }
  },
  emits: ["register"],
  setup(e) {
    const t = u(""), i = u(""), f = u([]), d = u("field"), c = D(() => e.tableType == 1 || e.tableType == 2), [s, { closeDrawer: n }] = b((m) => {
      t.value = m.cgformId, i.value = t.value + "?" + (/* @__PURE__ */ new Date()).getTime(), d.value = "field";
    });
    function l() {
      n();
    }
    return {
      activeKey: d,
      cgformId: t,
      headId: i,
      authFields: f,
      hasDataAuth: c,
      onClose: l,
      registerDrawer: s
    };
  }
});
function T(e, t, i, f, d, c) {
  const s = a("AuthFieldConfig"), n = a("a-tab-pane"), l = a("AuthButtonConfig"), m = a("AuthDataConfig"), g = a("a-tabs"), C = a("BasicDrawer");
  return h(), y(C, {
    onRegister: e.registerDrawer,
    title: "权限管理",
    width: 800,
    onClose: e.onClose
  }, {
    default: r(() => [
      o(g, {
        activeKey: e.activeKey,
        "onUpdate:activeKey": t[1] || (t[1] = (p) => e.activeKey = p)
      }, {
        default: r(() => [
          o(n, {
            tab: "字段权限",
            key: "field",
            forceRender: ""
          }, {
            default: r(() => [
              o(s, {
                headId: e.headId,
                authFields: e.authFields,
                "onUpdate:authFields": t[0] || (t[0] = (p) => e.authFields = p)
              }, null, 8, ["headId", "authFields"])
            ]),
            _: 1
          }),
          e.hasDataAuth ? (h(), _(B, { key: 0 }, [
            o(n, {
              tab: "按钮权限",
              key: "button",
              forceRender: ""
            }, {
              default: r(() => [
                o(l, { headId: e.headId }, null, 8, ["headId"])
              ]),
              _: 1
            }),
            o(n, {
              tab: "数据权限",
              key: "data",
              forceRender: ""
            }, {
              default: r(() => [
                o(m, {
                  cgformId: e.cgformId,
                  authFields: e.authFields
                }, null, 8, ["cgformId", "authFields"])
              ]),
              _: 1
            })
          ], 64)) : F("", !0)
        ]),
        _: 1
      }, 8, ["activeKey"])
    ]),
    _: 1
  }, 8, ["onRegister", "onClose"]);
}
const S = /* @__PURE__ */ K(R, [["render", T]]);
export {
  S as default
};
